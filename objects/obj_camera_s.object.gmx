<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_camera_s</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-3000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

id.target = global.active_character;

// Target position.
id.x_target = 0;
id.y_target = 0;

// Adjustments on the view anchor point.
id.x_offset = 0;
id.y_offset = -20;

id.state = scr_unlock_state;
id.shake = false;
id.spd = 1;//3 / room_speed;
id.shift_spd = 80;
id.dir = target.dir;
id.last_dir = dir;

// Input.
id.device = id.target.device;
id.deadzone = 0.2;
id.lock = 0;
id.c_switch = 0;
id.hor = 0;
id.ver = 0;

// Camera shake.
id.shake_multiplier = 5;
id.shake_fade_speed = 0.02;

// View
id.view_spd = 2 / room_speed;

// Start on the target.
if (instance_exists(id.target)) {
    id.x = id.target.x;
    id.y = id.target.y;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Camera

global.camera = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move View

if (instance_exists(id.target)) {
    var cur_view_x = view_xview[0];
    var cur_view_y = view_yview[0];

    var view_x = clamp(id.x - (view_wview[0] / 2), 0, room_width - view_wview);
    var view_y = clamp(id.y - (view_hview[0] / 2), 0, room_height - view_hview);

    view_xview[0] = lerp(cur_view_x, view_x, id.view_spd);
    view_yview[0] = lerp(cur_view_y, view_y, id.view_spd);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Input

scr_view_input(id.device, id.deadzone);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Character Switch

/*if (target.control == HUMAN) {
    if (c_switch) {
        target.control = CPU;
        target = target.mate;
        target.nearest_enemy = instance_nearest(target.x, target.y, obj_enemy_parent);
        target.control = HUMAN;
        global.active_character = target;
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Choose State

if (lock &amp;&amp; state != scr_lock_state) {
    if (instance_exists(obj_enemy_parent)) {
        with (target) {
            nearest_enemy = instance_nearest(x, y, obj_enemy_parent);
            nearest_enemy.locked = true;
            dir = point_direction(x, y, nearest_enemy.x, nearest_enemy.y);
            //face_dir = dir;
            face = scr_dir_to_face(dir);
        }
        state = scr_lock_state;
    }
} else if (lock &amp;&amp; state == scr_lock_state) {
    target.nearest_enemy.locked = false;
    state = scr_unlock_state;
} else if (instance_exists(target) &amp;&amp; target.aim) {
    state = scr_view_aim_state;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute State

script_execute(id.state);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Keep Things Close

global.glob.x = id.x;
global.glob.y = id.y;

/*if (instance_exists(obj_shader_controller)) {
    obj_shader_controller.x = id.x;
    obj_shader_controller.y = id.y;
}
if (instance_exists(obj_particle_controller)) {
    obj_particle_controller.x = id.x;
    obj_particle_controller.y = id.y;
}
if (instance_exists(obj_inventory_controller)) {
    obj_inventory_controller.x = id.x;
    obj_inventory_controller.y = id.y;
}
if (instance_exists(obj_debug)) {
    obj_debug.x = id.x;
    obj_debug.y = id.y;
}
if (instance_exists(obj_parallax_controller)) {
    obj_parallax_controller.x = id.x;
    obj_parallax_controller.y = id.y;
}
if (instance_exists(obj_score_controller)) {
    obj_score_controller.x = id.x;
    obj_score_controller.y = id.y;
}
if (instance_exists(obj_spawn_controller)) {
    obj_spawn_controller.x = id.x;
    obj_spawn_controller.y = id.y;
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Camera Shake

// Camera shaking.
if (global.shake_intensity &gt; 0) {
    if (global.camera != noone) {
        var shake = global.shake_intensity * id.shake_multiplier;
        //id.x += choose(random(shake), random(-shake));
        //id.y += choose(random(shake), random(-shake));
        view_xview[0] += choose(random(shake), random(-shake));
        view_yview[0] += choose(random(shake), random(-shake));
    }
    global.shake_intensity -= id.shake_fade_speed;
} else if (global.shake_intensity &lt; 0) {
    global.shake_intensity = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Disable View

view_enabled = false;
view_visible[0] = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enable View

view_enabled = true;
view_visible[0] = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Position

/*if (!instance_exists(obj_view)) {
    instance_create(target.x, target.y, obj_view);
}*/

if (instance_exists(id.target)) {
    id.x = target.x + id.x_offset;
    id.y = target.y + id.y_offset;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update View Position

view_xview[0] = clamp(id.x - (view_wview[0] / 2), 0, room_width - view_wview);
view_yview[0] = clamp(id.y - (view_hview[0] / 2), 0, room_height - view_hview)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the View Object

/*if (!instance_exists(obj_view)) {
    instance_create(target.x, target.y, obj_view);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
