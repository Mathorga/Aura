<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grof</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_worm_parent_s</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General

//Built-in
id.alarm[0] = room_speed;

id.face = scr_dir_to_face(id.dir);
id.walk_spd = 30 / room_speed;
id.run_spd = 80 / room_speed;
id.sight = 200;
id.atk_sight = 50;
id.targetx = 0;
id.targety = 0;

id.corpse = obj_slime_corpse;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// State Setters

id.set_die_state = scr_enemy_slime_set_die_state;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// States

id.attack_1_state = scr_enemy_slime_attack_1_state;

id.state = id.idle_state;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack

ds_list_add(id.attacks, id.attack_1_state);

id.attack_actions[0] = ATK_1;

id.attack_damage[0] = 1 * id.base_damage;

id.attack_cost = 3;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprites

// Stand
id.sprite[RIGHT, STAND] = spr_grof;
id.sprite[UP, STAND] = spr_grof;
id.sprite[LEFT, STAND] = spr_grof;
id.sprite[DOWN, STAND] = spr_grof;

// Walk
id.sprite[RIGHT, WALK] = spr_grof;
id.sprite[UP, WALK] = spr_grof;
id.sprite[LEFT, WALK] = spr_grof;
id.sprite[DOWN, WALK] = spr_grof;

// Run
id.sprite[RIGHT, RUN] = spr_grof;
id.sprite[UP, RUN] = spr_grof;
id.sprite[LEFT, RUN] = spr_grof;
id.sprite[DOWN, RUN] = spr_grof;

// Attack 1
id.sprite[RIGHT, ATK_1] = spr_grof;
id.sprite[UP, ATK_1] = spr_grof;
id.sprite[LEFT, ATK_1] = spr_grof;
id.sprite[DOWN, ATK_1] = spr_grof;

// Fall
id.sprite[RIGHT, FALL] = spr_grof;
id.sprite[UP, FALL] = spr_grof;
id.sprite[LEFT, FALL] = spr_grof;
id.sprite[DOWN, FALL] = spr_grof;

// Die
id.sprite[RIGHT, DIE] = spr_grof;
id.sprite[UP, DIE] = spr_grof;
id.sprite[LEFT, DIE] = spr_grof;
id.sprite[DOWN, DIE] = spr_grof;

// Corpse
id.sprite[RIGHT, CORPSE] = spr_grof;
id.sprite[UP, CORPSE] = spr_grof;
id.sprite[LEFT, CORPSE] = spr_grof;
id.sprite[DOWN, CORPSE] = spr_grof;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inherit

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go to the target.

/*var inst = instance_nearest(x, y, obj_player_parent_s);

if (inst != noone) {
    mp_potential_step(inst.x, inst.y, 1, false);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inherit

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// State Endings

switch (id.state) {
    case self.die_state:
        // Destroy self.
        instance_destroy();
        break;
    case self.fall_state:
        // Destroy self.
        instance_destroy();
        break;
    case self.drown_state:
        // Destroy self.
        instance_destroy();
        break;
    case self.chase_state:
        id.state = id.idle_state;
        script_execute(id.mode);
        break;
    case self.attack_1_state:
        //id.attacked = false;
        script_execute(id.mode);
        break;
    default:
        break;        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Grid

if (keyboard_check(vk_f1)) {
    draw_set_alpha(0.1);
    draw_set_colour(c_white);
    mp_grid_draw(global.ai_grid);
    for (var i = 0; i &lt; room_width; i += TILE_WIDTH;) {
        draw_line_width(i, 0, i, room_height, 3);
    }
    for (var j = 0; j &lt; room_width; j += TILE_HEIGHT;) {
        draw_line_width(0, j, room_width, j, 3);
    }
    draw_set_alpha(1);
    draw_path(id.ai_path, x, y, true);
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>4</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
