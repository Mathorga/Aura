<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

// Bag Slots.
for (i = 0; i &lt; 10; i++) {
    bag[i] = instance_create(0, 0, obj_item_slot);
    bag[i].h_pos = i;
    bag[i].v_pos = 8;
    bag[i].owner = global.active_character;
}
bag[0].item = instance_create(0, 0, obj_item_ring_test);
bag[0].item.in_bag = true;
bag[1].item = instance_create(0, 0, obj_item_accessory_test);
bag[1].item.in_bag = true;
bag[4].item = instance_create(0, 0, obj_item_usable_test);
bag[4].item.in_bag = true;
bag[5].item = instance_create(0, 0, obj_item_accessory_test);
bag[5].item.in_bag = true;
bag[9].item = instance_create(0, 0, obj_item_ring_test);
bag[9].item.in_bag = true;

alpha_increment = 0.1;  // The increment in alpha when opening/closing the menu.
alpha = 0;              // Controls the alpha value of the inventory menu.

// Input variables.
open = false;
right = false;
left = false;
up = false;
down = false;
move = false;
toss = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selector

v_selector = 0;         // Controls the vertical position of the selector.
h_selector = 0;         // Controls the horizontal position of the selector.
selector_x = view_xview;
selector_y = view_yview;
selector_speed = 30 / room_speed;
resize_speed = 6 / room_speed;
selector_size = 1;
shrink = false;
enlarge = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Input

if (gamepad_is_connected(0)) {
    scr_inventory_gamepad(0);
} else {
    scr_inventory_keyboard();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Open/Close Inventory Menu

if (open) {
    if (global.inventory_open) {
        global.inventory_open = false;
        if (global.item_grabbed != noone) {
            global.item_grabbed = noone;
        }
        global.current_slot = noone;
        global.last_slot = noone;
        alpha = 0.8;
    } else {
        global.inventory_open = true;
        global.current_slot = global.active_character.rings[0];
        global.last_slot = global.current_slot;
        h_selector = 0;
        v_selector = 0;
        // Put the selector over the current slot.
        selector_x = global.current_slot.x_coord;
        selector_y = global.current_slot.y_coord;
        selector_size = 1;
        alpha = 0;
    }
}

if (global.inventory_open) {        // Opening.
    if (alpha &lt; 0.8) {
        alpha += alpha_increment;
    } else {
        alpha = 0.8;
    }
} else {                            // Closing.
    if (alpha &gt; 0) {
        alpha -= alpha_increment;
    } else {
        alpha = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Compact the Bag

/*for (i = 0; i &lt; 10; i++) {
    if (bag[i].item != noone) {
        for (j = 0; j &lt; i; j++) {
            if (bag[j].item == noone &amp;&amp; i &gt; j) {
                bag[j].item = bag[i].item;
                bag[j].h_pos = j;
                bag[i].item = noone;
            }
        }
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selector Positions

if (down) {
    if (v_selector == 7 &amp;&amp; h_selector = 0) {
        shrink = true;
        enlarge = false;
    }
    if (v_selector == 8 &amp;&amp; h_selector == 0) {
        enlarge = true;
        shrink = false;
        v_selector = 0;
    } else if (v_selector == 8 &amp;&amp; h_selector &gt; 2 &amp;&amp; h_selector &lt; 7) {
        h_selector -= 2;
        v_selector--;
    } else if (v_selector == 8 &amp;&amp; h_selector &lt;= 2) {
        h_selector = 0;
        v_selector = 0;
    } else if (v_selector == 8 &amp;&amp; h_selector &gt;= 7) {
        h_selector = 4;
        v_selector--;
    } else if (v_selector == 7 &amp;&amp; h_selector &gt; 0) {
        h_selector += 2;
        v_selector++;
    } else {
        v_selector++;
    }
} else if (up) {
    if (v_selector == 0) {
        shrink = true;
        enlarge = false;
        h_selector = 0;
        v_selector = 8;
    } else if (v_selector == 7 &amp;&amp; h_selector &gt; 0) {
        h_selector += 2;
        v_selector = 8;
    } else if (v_selector == 8 &amp;&amp; h_selector &gt; 2 &amp;&amp; h_selector &lt; 7) {
        h_selector -= 2;
        v_selector--;
    } else if (v_selector == 8 &amp;&amp; h_selector &lt;= 2) {
        enlarge = true;
        shrink = false;
        h_selector = 0;
        v_selector--;
    } else if (v_selector == 8 &amp;&amp; h_selector &gt;= 7) {
        h_selector = 4;
        v_selector--;
    } else if (h_selector == 0) {
        v_selector--;
    }
} else if (left) {
    if (v_selector == 7 &amp;&amp; h_selector == 1) {
        enlarge = true;
        shrink = false;
    }
    if (v_selector &lt; 7) {
        shrink = true;
        enlarge = false;
        v_selector = 7;
        h_selector = 4;
    } else if (v_selector != 8 &amp;&amp; h_selector == 0) {
        shrink = true;
        enlarge = false;
        h_selector = 4;
    } else if (v_selector == 8 &amp;&amp; h_selector == 0) {
        h_selector = 9;
    } else {
        h_selector--;
    }
} else if (right) {
    if (v_selector &lt;= 7 &amp;&amp; h_selector == 0) {
        shrink = true;
        enlarge = false;
        v_selector = 7;
        h_selector++;
    } else if (v_selector == 7 &amp;&amp; h_selector == 4) {
        enlarge = true;
        shrink = false;
        h_selector = 0;
    } else if (v_selector == 8 &amp;&amp; h_selector == 9) {
        h_selector = 0;
    } else {
        h_selector++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selector Movement

// Move the selector.
if (global.inventory_open) {
    var dir = point_direction(selector_x, selector_y, global.current_slot.x_coord, global.current_slot.y_coord);
    var len = point_distance(selector_x, selector_y, global.current_slot.x_coord, global.current_slot.y_coord) * selector_speed;
    
    selector_x += lengthdir_x(len, dir);
    selector_y += lengthdir_y(len, dir);
}

// Control selector size.
if (shrink) {
    selector_size -= resize_speed;
    if (selector_size &lt;= 0) {
        selector_size = 0;
        shrink = false;
    }
} else if (enlarge) {
    selector_size += resize_speed;
    if (selector_size &gt;= 1) {
        selector_size = 1;
        enlarge = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep the Bag Visible

for (i = 0; i &lt; 10; i++) {
    bag[i].owner = global.active_character;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage Items

if (global.inventory_open) {
    if (toss) {
        if (h_selector == 0 &amp;&amp; v_selector &lt; 4) {                                // Rings.
            if (global.active_character.rings[v_selector].item != noone) {
                if (global.active_character.rings[v_selector].item.grabbed) {
                    global.active_character.rings[v_selector].item.grabbed = false;
                    global.item_grabbed = noone;
                }
                global.active_character.rings[v_selector].item.x = global.active_character.x;
                global.active_character.rings[v_selector].item.y = global.active_character.y;
                global.active_character.rings[v_selector].item.visible = true;
                global.active_character.rings[v_selector].item = noone;
            }
        } else if (h_selector == 0 &amp;&amp; v_selector &gt;= 4 &amp;&amp; v_selector &lt; 6) {      // Accessories.
           if (global.active_character.accessories[v_selector - 4].item != noone) {
                if (global.active_character.accessories[v_selector - 4].item.grabbed) {
                    global.active_character.accessories[v_selector - 4].item.grabbed = false;
                    global.item_grabbed = noone;
                }
                global.active_character.accessories[v_selector - 4].item.x = global.active_character.x;
                global.active_character.accessories[v_selector - 4].item.y = global.active_character.y;
                global.active_character.accessories[v_selector - 4].item.visible = true;
                global.active_character.accessories[v_selector - 4].item = noone;
            } 
        }  else if (h_selector == 0 &amp;&amp; v_selector == 6) {                       // Amulet.
            if (global.active_character.amulet.item != noone) {
                if (global.active_character.amulet.item.grabbed) {
                    global.active_character.amulet.item.grabbed = false;
                    global.item_grabbed = noone;
                }
                global.active_character.amulet.item.x = global.active_character.x;
                global.active_character.amulet.item.y = global.active_character.y;
                global.active_character.amulet.item.visible = true;
                global.active_character.amulet.item = noone;
            }
        } else if (h_selector == 0 &amp;&amp; v_selector == 7) {                        // Special.
            if (global.active_character.special.item != noone) {
                if (global.active_character.special.item.grabbed) {
                    global.active_character.special.item.grabbed = false;
                    global.item_grabbed = noone;
                }
                global.active_character.special.item.x = global.active_character.x;
                global.active_character.special.item.y = global.active_character.y;
                global.active_character.special.item.visible = true;
                global.active_character.special.item = noone;
            }
        } else if (v_selector == 7 &amp;&amp; h_selector &gt; 0) {                         // Usables.
            if (global.active_character.usables[h_selector - 1].item != noone) {
                if (global.active_character.usables[h_selector - 1].item.grabbed) {
                    global.active_character.usables[h_selector - 1].item.grabbed = false;
                    global.item_grabbed = noone;
                }
                global.active_character.usables[h_selector - 1].item.x = global.active_character.x;
                global.active_character.usables[h_selector - 1].item.y = global.active_character.y;
                global.active_character.usables[h_selector - 1].item.visible = true;
                global.active_character.usables[h_selector - 1].item = noone;
            }
        } else {                                                                // Bag.
            if (bag[h_selector].item != noone) {
                if (bag[h_selector].item.grabbed) {
                    bag[h_selector].item.grabbed = false;
                    global.item_grabbed = noone;
                }
                bag[h_selector].item.x = global.active_character.x;
                bag[h_selector].item.y = global.active_character.y;
                bag[h_selector].item.visible = true;
                bag[h_selector].item = noone;
            }
        }
    }
    
    
    
    else if (move) {
        if (h_selector == 0 &amp;&amp; v_selector &lt; 4) {                                // Rings.
            if (global.active_character.rings[v_selector].item != noone) {
                // The item slot is occupied.
                if (global.item_grabbed == noone) {
                    // There's no grabbed item -&gt; grab the item.
                    global.active_character.rings[v_selector].item.grabbed = true;
                    global.item_grabbed = global.active_character.rings[v_selector].item;
                    global.item_grabbed_owner = global.active_character.rings[v_selector].owner;
                    global.item_grabbed_h = h_selector;
                    global.item_grabbed_v = v_selector;
                } else {
                    // There is a grabbed item.
                    // Check if the item can be released here.
                    if (global.item_grabbed.type == RING) {
                        // The grabbed item can be put here -&gt; put the grabbed item down.
                        var instance = global.active_character.rings[v_selector].item;
                        global.active_character.rings[v_selector].item = global.item_grabbed;
                        global.active_character.rings[v_selector].item.in_bag = false;
                        global.active_character.rings[v_selector].item.grabbed = false;
                        if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v &lt; 4) {
                            // The grabbed item comes from the rings' group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.rings[global.item_grabbed_v].item = instance;
                                global.active_character.rings[global.item_grabbed_v].item.grabbed = false;
                            } else {
                                // The grabbed item comes from the active character's mate.
                                global.active_character.mate.rings[global.item_grabbed_v].item = instance;
                                global.active_character.mate.rings[global.item_grabbed_v].item.grabbed = false;
                            }
                        } else {
                            // The grabbed item comes from the bag.
                            bag[global.item_grabbed_h].item = instance;
                            bag[global.item_grabbed_h].item.in_bag = true;
                            bag[global.item_grabbed_h].item.grabbed = false;
                        }
                        global.item_grabbed = noone;
                    } else {
                        // The grabbed item can't be put here.
                        //TODO Produce sound.
                    }
                }
            } else {
                // The item slot is free.
                if (global.item_grabbed != noone) {
                    // There is a grabbed item.
                    if (global.item_grabbed.type == RING) {
                        // The grabbed item can be put here.
                        global.active_character.rings[v_selector].item = global.item_grabbed;
                        global.active_character.rings[v_selector].item.in_bag = false;
                        global.active_character.rings[v_selector].item.grabbed = false;
                        global.item_grabbed = noone;
                        if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v &lt; 4) {
                            // The grabbed item comes from the rings' group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.rings[global.item_grabbed_v].item = noone;
                            } else {
                                global.active_character.mate.rings[global.item_grabbed_v].item = noone;
                            }
                        } else {
                            // The grabbed item comes from the bag.
                            bag[global.item_grabbed_h].item = noone;
                        }
                    } else {
                        // The grabbed item can't be put here.
                        //TODO Produce sound.
                    }
                } else {
                    // There is no grabbed item.
                    //TODO Produce sound.
                }
            }
        }
        
        
        
        else if (h_selector == 0 &amp;&amp; v_selector &gt;= 4 &amp;&amp; v_selector &lt; 6) {      // Accessories.
            if (global.active_character.accessories[v_selector - 4].item != noone) {
                // The item slot is occupied.
                if (global.item_grabbed == noone) {
                    // There is no grabbed item.
                    global.active_character.accessories[v_selector - 4].item.grabbed = true;
                    global.item_grabbed = global.active_character.accessories[v_selector - 4].item;
                    global.item_grabbed_owner = global.active_character;
                    global.item_grabbed_h = h_selector;
                    global.item_grabbed_v = v_selector;
                } else {
                    // There is a grabbed item.
                    // Check if the item can be released here.
                    if (global.item_grabbed.type == ACCESSORY) {
                        // The grabbed item can be put here.
                        var instance = global.active_character.accessories[v_selector - 4].item;
                        global.active_character.accessories[v_selector - 4].item = global.item_grabbed;
                        global.active_character.accessories[v_selector - 4].item.in_bag = false;
                        global.active_character.accessories[v_selector - 4].item.grabbed = false;
                        global.item_grabbed = noone;
                        if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v &gt;= 4 &amp;&amp; global.item_grabbed_v &lt; 6) {
                            // The grabbed item comes from the accessories' group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.accessories[global.item_grabbed_v - 4].item = instance;
                                global.active_character.accessories[global.item_grabbed_v - 4].item.grabbed = false;
                            } else {
                                // The grabbed item comes from the active character's mate.
                                global.active_character.mate.accessories[global.item_grabbed_v - 4].item = instance;
                                global.active_character.mate.accessories[global.item_grabbed_v - 4].item.grabbed = false;
                            }
                        } else {
                            // The grabbed item comes from the bag.
                            bag[global.item_grabbed_h].item = instance;
                            bag[global.item_grabbed_h].item.in_bag = true;
                            bag[global.item_grabbed_h].item.grabbed = false;
                        }
                    } else {
                        // The grabbed item can't be put here.
                        //TODO Produce sound;
                    }
                }
            } else {
                // The item slot is free.
                if (global.item_grabbed != noone) {
                    // There is a grabbed item.
                    if (global.item_grabbed.type == ACCESSORY) {
                        // The grabbed item can be put here.
                        global.active_character.accessories[v_selector - 4].item = global.item_grabbed;
                        global.active_character.accessories[v_selector - 4].item.in_bag = false;
                        global.active_character.accessories[v_selector - 4].item.grabbed = false;
                        global.item_grabbed = noone;
                        if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v &gt;= 4 &amp;&amp; global.item_grabbed_v &lt; 6) {
                            // The grabbed item comes from the accessories' group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.accessories[global.item_grabbed_v - 4].item = noone;
                            } else {
                                // The grabbed item comes from the active character's mate.
                                global.active_character.mate.accessories[global.item_grabbed_v - 4].item = noone;
                            }
                        } else {
                            // The grabbed item comes from the bag.
                            bag[global.item_grabbed_h].item = noone;
                        }
                    } else {
                        // The grabbed item can't be put here.
                        //TODO Produce sound.
                    }
                } else {
                    // There is no grabbed item.
                    //TODO Produce sound.
                }
            }
        }
        
        
        
        else if (h_selector == 0 &amp;&amp; v_selector == 6) {                       // Amulet.
            if (global.active_character.amulet.item != noone) {
                // The item slot is occupied.
                if (global.item_grabbed == noone) {
                    // There is no grabbed item.
                    global.active_character.amulet.item.grabbed = true;
                    global.item_grabbed = global.active_character.amulet.item;
                    global.item_grabbed_owner = global.active_character;
                    global.item_grabbed_h = h_selector;
                    global.item_grabbed_v = v_selector;
                } else {
                    // There is a grabbed item.
                    // Verify if the item can be released here.
                    if (global.item_grabbed.type == AMULET) {
                        // The grabbed item can be put here
                        var instance = global.active_character.amulet.item;
                        global.active_character.amulet.item = global.item_grabbed;
                        global.active_character.amulet.item.in_bag = false;
                        global.active_character.amulet.item.grabbed = false;
                        global.item_grabbed = noone;
                        if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v == 6) {
                            // The grabbed item comes from the amulet group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.amulet.item = instance;
                                global.active_character.amulet.item.grabbed = false;
                            } else {
                                // The grabbed item comes from the active character's mate.
                                global.active_character.mate.amulet.item = instance;
                                global.active_character.mate.amulet.item.grabbed = false;
                            }
                            global.active_character.amulet.item = instance;
                            global.active_character.amulet.item.grabbed = false;
                        } else {
                            // The grabbed item comes from the bag.
                            bag[global.item_grabbed_h].item = instance;
                            bag[global.item_grabbed_h].item.in_bag = true;
                            bag[global.item_grabbed_h].item.grabbed = false;
                        }
                    } else {
                        // The grabbed item can't be put here.
                        //TODO Produce sound;
                    }
                }
            } else {
                // The item slot is free.
                if (global.item_grabbed != noone) {
                    // There is a grabbed item.
                    if (global.item_grabbed.type == AMULET) {
                        // The item can be put here.
                        global.active_character.amulet.item = global.item_grabbed;
                        global.active_character.amulet.item.in_bag = false;
                        global.active_character.amulet.item.grabbed = false;
                        global.item_grabbed = noone;
                        if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v == 6) {
                            // The grabbed item comes from the amulet group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.amulet.item = noone;
                            } else {
                                // The grabbed item comes from the active character's mate.
                                global.active_character.mate.amulet.item = noone;
                            }
                        } else {
                            // The grabbed item comes from the bag.
                            bag[global.item_grabbed_h].item = noone;
                        }
                    } else {
                        // The item can't be put here.
                        //TODO Produce sound.
                    }
                } else {
                    // There is no grabbed item.
                    //TODO Produce sound.
                }
            }
        }
        
        
        
        else if (h_selector == 0 &amp;&amp; v_selector == 7) {                       // Special.
            if (global.active_character.special.item != noone) {
                // The item slot is occupied.
                if (global.item_grabbed == noone) {
                    // There is no grabbed item.
                    global.active_character.special.item.grabbed = true;
                    global.item_grabbed = global.active_character.special.item;
                    global.item_grabbed_owner = global.active_character;
                    global.item_grabbed_h = h_selector;
                    global.item_grabbed_v = v_selector;
                } else {
                    // There is a grabbed item.
                    // Verify if the item can be released here.
                    if (global.item_grabbed.type == SPECIAL) {
                        // The item can be put here.
                        var instance = global.active_character.special.item;
                        global.active_character.special.item = global.item_grabbed;
                        global.active_character.special.item.in_bag = false;
                        global.active_character.special.item.grabbed = false;
                        global.item_grabbed = noone;
                        if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v == 7) {
                            // The grabbed item comes from the special group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.special.item = instance;
                                global.active_character.special.item.grabbed = false;
                            } else {
                                // The grabbed item comes from the active character's mate.
                                global.active_character.mate.special.item = instance;
                                global.active_character.mate.special.item.grabbed = false;
                            }
                        } else {
                            // The item comes from the bag.
                            bag[global.item_grabbed_h].item = instance;
                            bag[global.item_grabbed_h].item.in_bag = true;
                            bag[global.item_grabbed_h].item.grabbed = false;
                        }
                    } else {
                        // The item can't be put here.
                        //TODO Produce sound;
                    }
                }
            } else {
                // The item slot is free.
                if (global.item_grabbed != noone) {
                    // There is a grabbed item.
                    if (global.item_grabbed.type == SPECIAL) {
                        // The grabbed item can be put here.
                        global.active_character.special.item = global.item_grabbed;
                        global.active_character.special.item.in_bag = false;
                        global.active_character.special.item.grabbed = false;
                        global.item_grabbed = noone;
                        if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v == 7) {
                            // The grabbed item comes from the special group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.special.item = noone;
                            } else {
                                // The grabbed item comes from the active character's mate.
                                global.active_character.mate.special.item = noone;
                            }
                        } else {
                            // The item comes from the bag.
                            bag[global.item_grabbed_h].item = noone;
                        }
                    } else {
                        // The grabbed item can't be put here.
                        //TODO Produce sound.
                    }
                } else {
                    // There is no grabbed item.
                    //TODO Produce sound.
                }
            }
        }
        
        
        
        else if (v_selector == 7 &amp;&amp; h_selector &gt; 0) {                         // Usables.
            if (global.active_character.usables[h_selector - 1].item != noone) {
                // The item slot is occupied.
                if (global.item_grabbed == noone) {
                    // There is no grabbed item.
                    global.active_character.usables[h_selector - 1].item.grabbed = true;
                    global.item_grabbed = global.active_character.usables[h_selector - 1].item;
                    global.item_grabbed_owner = global.active_character;
                    global.item_grabbed_h = h_selector;
                    global.item_grabbed_v = v_selector;
                } else {
                    // There is a grabbed item.
                    // Verify if the item can be released here.
                    if (global.item_grabbed.type == USABLE) {
                        // The grabbed item can be put here.
                        // Put the grabbed item down.
                        var instance = global.active_character.usables[h_selector - 1].item;
                        global.active_character.usables[h_selector - 1].item = global.item_grabbed;
                        if (global.item_grabbed_v == 7 &amp;&amp; global.item_grabbed_h &gt; 0) {
                            // The grabbed item comes from usables' group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.usables[global.item_grabbed_h - 1].item = instance;
                                global.active_character.usables[global.item_grabbed_h - 1].item.grabbed = false;
                            } else {
                                // The grabbed item comes from the active character's mate.
                                global.active_character.mate.usables[global.item_grabbed_h - 1].item = instance;
                                global.active_character.mate.usables[global.item_grabbed_h - 1].item.grabbed = false;
                            }
                        } else {
                            // The grabbed item comes from the bag.
                            bag[global.item_grabbed_h].item = instance;
                            bag[global.item_grabbed_h].item.in_bag = true;
                            bag[global.item_grabbed_h].item.grabbed = false;
                        }
                    } else {
                        // The grabbed item can't be put here.
                        //TODO Produce sound;
                    }
                }
            } else {
                // The item slot is free.
                if (global.item_grabbed != noone) {
                    // There is a grabbed item.
                    if (global.item_grabbed.type == USABLE) {
                        // The grabbed item can be put here.
                        global.active_character.usables[h_selector - 1].item = global.item_grabbed;
                        global.active_character.usables[h_selector - 1].item.in_bag = false;
                        global.active_character.usables[h_selector - 1].item.grabbed = false;
                        global.item_grabbed = noone;
                        if (global.item_grabbed_v == 7 &amp;&amp; global.item_grabbed_h &gt; 0) {
                            // The grabbed item comes from the usables' group.
                            if (global.item_grabbed_owner == global.active_character) {
                                // The grabbed item comes from the active character.
                                global.active_character.usables[global.item_grabbed_h - 1].item = noone;
                            } else {
                                // The grabbed item comes from the active character's mate.
                                global.active_character.mate.usables[global.item_grabbed_h - 1].item = noone;
                            }
                        } else {
                            // The grabbed item comes from the bag.
                            bag[global.item_grabbed_h].item = noone;
                        }
                    }
                } else {
                    // The grabbed item can't be put here.
                    //TODO Produce sound.
                }
            }
        }
        
        
        
        else {                                                                // Bag.
            if (bag[h_selector].item != noone) {
                // The item slot is occupied.
                if (global.item_grabbed == noone) {
                    // There is no grabbed item.
                    bag[h_selector].item.grabbed = true;
                    global.item_grabbed = bag[h_selector].item;
                    global.item_grabbed_h = h_selector;
                    global.item_grabbed_v = v_selector;
                } else {
                    // There is a grabbed item.
                    // Verify if the item can be released here.
                    if (bag[h_selector].item.type == global.item_grabbed.type || global.item_grabbed.in_bag) {
                        // The grabbed item can be put here.
                        var instance = bag[h_selector].item;
                        bag[h_selector].item = global.item_grabbed;
                        bag[h_selector].item.in_bag = true;
                        if (global.item_grabbed.in_bag) {
                            // The grabbed item comes from the bag.
                            bag[global.item_grabbed_h].item = instance;
                            bag[global.item_grabbed_h].item.grabbed = false;
                        } else {
                            // The grabbed doesn't come from the bag.
                            switch (global.item_grabbed.type) {
                                case RING:
                                    // The grabbed item comes from the rings' group.
                                    global.active_character.rings[global.item_grabbed_v].item = instance;
                                    global.active_character.rings[global.item_grabbed_v].item.in_bag = false;
                                    global.active_character.rings[global.item_grabbed_v].item.grabbed = false;
                                    break;
                                case ACCESSORY:
                                    // The grabbed item comes from the accessories' group.
                                    global.active_character.accessories[global.item_grabbed_v - 4].item = instance;
                                    global.active_character.accessories[global.item_grabbed_v - 4].item.in_bag = false;
                                    global.active_character.accessories[global.item_grabbed_v - 4].item.grabbed = false;
                                    break;
                                case AMULET:
                                    // The grabbed item comes from the amulet group.
                                    global.active_character.amulet.item = instance;
                                    global.active_character.amulet.item.in_bag = false;
                                    global.active_character.amulet.item.grabbed = false;
                                    break;
                                case SPECIAL:
                                    // The grabbed item comes from the special group.
                                    global.active_character.special.item = instance;
                                    global.active_character.apecial.item.in_bag = false;
                                    global.active_character.apecial.item.grabbed = false;
                                    break;
                                case USABLE:
                                    // The grabbed item comes from the usables' group.
                                    global.active_character.usables[global.item_grabbed_h - 1].item = instance;
                                    global.active_character.usables[global.item_grabbed_h - 1].item.in_bag = false;
                                    global.active_character.usables[global.item_grabbed_h - 1].item.grabbed = false;
                                    break;
                            }
                        }
                        global.item_grabbed = noone;
                    } else {
                        // The item can't be put here.
                        //TODO Produce sound;
                    }
                }
            } else {
                // The item slot is free.
                if (global.item_grabbed != noone) {
                    // There is a grabbed item.
                    // Put the grabbed item down.
                    bag[h_selector].item = global.item_grabbed;
                    bag[h_selector].item.in_bag = true;
                    bag[h_selector].item.grabbed = false;
                    global.item_grabbed = noone;
                    
                    // Trial.
                    if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v &lt; 4) {
                        // The grabbed item comes from the rings' group.
                        global.active_character.rings[global.item_grabbed_v].item = noone;
                    } else if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v &gt;= 4 &amp;&amp; global.item_grabbed_v &lt; 6) {
                        // The grabbed item comes from the accessories' group.
                        global.active_character.accessories[global.item_grabbed_v - 4].item = noone;
                    } else if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v == 6) {
                        // The grabbed item comes from the amulet group.
                        global.active_character.amulet.item = noone;
                    } else if (global.item_grabbed_h == 0 &amp;&amp; global.item_grabbed_v == 7) {
                        // The grabbed item comes from the special group.
                        global.active_character.special.item = noone;
                    } else if (global.item_grabbed_v == 7 &amp;&amp; global.item_grabbed_h &gt; 0) {
                        // The grabbed item comes from the usables' group.
                        global.active_character.usables[global.item_grabbed_h - 1].item = noone;
                    } else {
                        // The grabbed item comes from the bag.
                        bag[global.item_grabbed_h].item = noone;
                    }
                } else {
                    // There is no grabbed item.
                    //TODO Produce sound.
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control Grabbed Item

if (global.item_grabbed == noone) {
    global.item_grabbed_h = noone;
    global.item_grabbed_v = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Close the Inventory

global.inventory_open = false;
if (global.item_grabbed != noone) {
    global.item_grabbed = noone;
}
global.current_slot = noone;
global.last_slot = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the Inventory Menu

// Do this in the Draw event (not DrawGUI) in order not to scale things according to the screen resolution:
// Everything has to remain the same size (in proportion) in any screen.

if (alpha != 0) {
    // Draw black screen.
    draw_set_font(fnt_hud2);
    draw_set_alpha(alpha);
    draw_set_colour(c_black);
    draw_rectangle(view_xview, view_yview, view_xview + view_wview, view_yview + view_hview, false);
    
    // Draw player sprite.
    draw_sprite_ext(global.active_character.inventory_sprite, 0, view_xview + 470, view_yview + 150, 1, 1, 0, c_white, alpha);
    
    // Draw selector.
    draw_set_colour(c_dkgray);
    draw_roundrect(view_xview + selector_x - 15, view_yview + selector_y - 15 + selector_size * 5, view_xview + selector_x + 15 + selector_size * 115, view_yview + selector_y + 15 - selector_size * 5, false);
    
    /* Wearables. */
    // Rings.
    for (i = 0; i &lt; 4; i++) {
        if (h_selector == global.active_character.rings[i].h_pos &amp;&amp; v_selector == global.active_character.rings[i].v_pos) {
            global.active_character.rings[i].selected = true;
        } else {
            global.active_character.rings[i].selected = false;
        }
    }
    // Accessories.
    for (i = 0; i &lt; 2; i++) {
        if (h_selector == global.active_character.accessories[i].h_pos &amp;&amp; v_selector == global.active_character.accessories[i].v_pos) {
            global.active_character.accessories[i].selected = true;
        } else {
            global.active_character.accessories[i].selected = false;
        }
    }
    // Amulet.
    if (h_selector == global.active_character.amulet.h_pos &amp;&amp; v_selector == global.active_character.amulet.v_pos) {
        global.active_character.amulet.selected = true;
    } else {
        global.active_character.amulet.selected = false;
    }
    // Special.
    if (h_selector == global.active_character.special.h_pos &amp;&amp; v_selector == global.active_character.special.v_pos) {
        global.active_character.special.selected = true;
    } else {
        global.active_character.special.selected = false;
    }
    
    /* Usables. */
    for (i = 0; i &lt; 4; i++) {
        if (h_selector == global.active_character.usables[i].h_pos &amp;&amp; v_selector == global.active_character.usables[i].v_pos) {
            global.active_character.usables[i].selected = true;
        } else {
            global.active_character.usables[i].selected = false;
        }
    }
    
    /* Bag. */
    var slot = view_wview / 10;
    for (i = 0; i &lt; 10; i++) {
        if (h_selector == bag[i].h_pos &amp;&amp; v_selector == bag[i].v_pos) {
            bag[i].selected = true;
        } else {
            bag[i].selected = false;
        }
    }
}

draw_set_alpha(1);                  // Reset alpha.
draw_set_colour(c_black);           // Reset color.
draw_set_halign(fa_left);           // Reset halign.
draw_set_valign(fa_top);            // Reset valign.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
