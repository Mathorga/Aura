<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_parent_s</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// General

id.hp = 5;
id.footprint = noone;
id.make_footprints = false;
id.footprint_side = LEFT;

// Conditions.
id.climbing = false;
id.falling = false;
id.fallen = false;
id.drowning = false;
id.drowned = false;
id.acceleration = 0.05;
id.hor_fall_spd = 0.5;
id.ver_fall_spd = 0.5;

// Alternate floor.
id.on_alt_floor = false;
id.main_floor_fall = noone;
id.main_floor_drown = noone;
id.alt_floor_fall = noone;
id.alt_floor_drown = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// States

// To be set in children objects.

id.move_state = scr_move_state;
id.die_state = noone;
id.fall_state = noone;
id.drown_state = noone;
id.idle_state = noone;
id.wander_state = noone;
id.chase_state = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sound Effects

id.snd_fx[SNOW_FOOTSTEP, 0] = snd_footstep_snow_1;
id.snd_fx[SNOW_FOOTSTEP, 1] = snd_footstep_snow_2;
id.snd_fx[SNOW_FOOTSTEP, 2] = snd_footstep_snow_3;
id.snd_fx[SNOW_FOOTSTEP, 3] = snd_footstep_snow_4;
id.snd_fx[SNOW_FOOTSTEP, 4] = snd_footstep_snow_5;
id.snd_fx[SNOW_FOOTSTEP, 5] = snd_footstep_snow_6;
id.snd_fx[SNOW_FOOTSTEP, 6] = snd_footstep_snow_7;
id.snd_fx[SNOW_FOOTSTEP, 7] = snd_footstep_snow_8;
id.snd_fx[SNOW_FOOTSTEP, 8] = snd_footstep_snow_9;
id.snd_fx[SNOW_FOOTSTEP, 9] = snd_footstep_snow_10;
id.snd_fx[SNOW_FOOTSTEP, 10] = snd_footstep_snow_11;
id.snd_fx[SNOW_FOOTSTEP, 11] = snd_footstep_snow_12;
id.snd_fx[SNOW_FOOTSTEP, 12] = snd_footstep_snow_13;
id.snd_fx[SNOW_FOOTSTEP, 13] = snd_footstep_snow_14;
id.snd_fx[SNOW_FOOTSTEP, 14] = snd_footstep_snow_15;
id.snd_fx[SNOW_FOOTSTEP, 15] = snd_footstep_snow_16;
id.snd_fx[SNOW_FOOTSTEP, 16] = snd_footstep_snow_17;
id.snd_fx[SNOW_FOOTSTEP, 17] = snd_footstep_snow_18;
id.snd_fx[SNOW_FOOTSTEP, 18] = snd_footstep_snow_19;
id.snd_fx[SNOW_FOOTSTEP, 19] = snd_footstep_snow_20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Footprints Alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute

// Execute state.
script_execute(id.state);

// Set sprite according to state.
id.sprite_index = id.sprite[id.face, id.action];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Regenerate Energy

if (id.energy &lt; id.maxenergy){
    id.energy += id.energy_regen;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Depth Set

scr_find_depth();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Behavior

// Initialize climbing flag.
if (position_meeting(id.x, id.y, obj_steps_parent)) {
    id.climbing = true;
    script_execute(id.mode);
} else {
    id.climbing = false;
}

// Initialize falling flag.
if (position_meeting(id.x, id.y, id.main_floor_fall)) {
    id.falling = true;
    
    // Run mode asynchronously in order to trigger fall even in the middle of another state.
    script_execute(id.mode);
} else {
    id.falling = false;
}

// Initialize drowning flag.
if (position_meeting(id.x, id.y, id.main_floor_drown)) {
    id.drowning = true;
    
    // Run mode asynchronously in order to trigger drown even in the middle of another state.
    script_execute(id.mode);
} else {
    // Reset drowning flag.
    id.drowning = false;
}

// Check hp and run mode asynchronously in order to trigger death even in the middle of another state.
if (id.hp &lt;= 0) {
    script_execute(id.mode);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death by Drowning/Falling

//TODO Use modular code!!!
/*if (self.state == self.drown_state || self.state == self.fall_state) {
    self.fallen = false;
    self.drowned = false;
    self.hp = 0;
}*/

if (self.state == scr_drown_state || self.state == scr_fall_state) {
    self.fallen = false;
    self.drowned = false;
    self.hp = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Self Falling

if (self.state == self.fall_state || self.state == self.drown_state) {
    //draw_set_alpha(self.hor_fall_spd);
    var scale = scr_map(0, 2 * self.walk_spd, self.hor_fall_spd, 0.8, 1);
    var alpha = scr_map(0, 2 * self.walk_spd, self.hor_fall_spd * 2, 0, 1);
    draw_sprite_ext(self.sprite_index, self.image_index, self.x, self.y, scale, scale, 0, c_white, hor_fall_spd);
    //draw_self();
    //draw_set_alpha(1);
} else {
    // Set shading.
    shader_set(shd_flip_colors);
    draw_self();
    // Reset shading.
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
