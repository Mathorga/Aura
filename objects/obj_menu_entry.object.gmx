<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_entry</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

// Entry text content.
id.text = "Test";

// Entry action to perform.
id.action = noone;

// Entry value (-1 if value does not apply).
id.value = -1;
id.max_value = 0;
id.default_value = 0;
// Offset from center in case of slider.
id.center_offset = 20;
id.slider_width = 150;
id.slider_height = 30;
id.slider_padding = 5;

// Current entry scale.
id.scale = 1;
id.min_scale = 0.86;
id.max_scale = 1;
// Current scale speed.
id.scale_speed = 0.01;
id.min_scale_speed = 0.01;
id.max_scale_speed = 0.05;
// Scale acceleration.
id.scale_accel = 0.02;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Data

// Set alignment.
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

// Set font.
draw_set_font(fnt_test);

if (id.value == -1) {
    // Just draw text centered.
    draw_text_transformed(id.x, id.y, id.text, id.scale, id.scale, 0);
} else {
    // Draw text.
    draw_set_halign(fa_right);
    draw_text_transformed(id.x - id.center_offset, id.y, id.text, id.scale, id.scale, 0);
    draw_set_halign(fa_left);
    
    // Draw slider background.
    var slider_bg_x1 = id.x + id.center_offset;
    var slider_bg_x2 = slider_bg_x1 + id.slider_width;
    var slider_bg_width = slider_bg_x2 - slider_bg_x1;
    var slider_bg_y1 = id.y - ((id.slider_height / 2) * id.scale);
    var slider_bg_y2 = id.y + ((id.slider_height / 2) * id.scale);
    draw_roundrect_colour(slider_bg_x1,
                          slider_bg_y1,
                          slider_bg_x1 + (slider_width * id.scale),
                          slider_bg_y2,
                          c_dkgray,
                          c_dkgray,
                          false);
    // Draw slider filler if value is greater than zero, because zero-width rectangles are drawn wrong.
    if (id.value &gt; 0) {
        var slider_fill_x1 = slider_bg_x1 + id.slider_padding;
        var slider_fill_x2 = slider_bg_x2 - id.slider_padding;
        var slider_fill_max_width = slider_fill_x2 - slider_fill_x1;
        var slider_fill_unit_width = slider_fill_max_width / id.max_value;
        var slider_fill_width = slider_fill_unit_width * id.value;
        var slider_fill_y1 = id.y - (((id.slider_height / 2) - id.slider_padding) * id.value);
        var slider_fill_y2 = id.y + (((id.slider_height / 2) - id.slider_padding) * id.value);
        draw_roundrect_colour(slider_fill_x1,
                              slider_fill_y1,
                              slider_fill_x1 + (slider_fill_width * id.scale),
                              slider_fill_y2,
                              c_gray,
                              c_gray,
                              false);
    }
}

// Reset alignment.
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
