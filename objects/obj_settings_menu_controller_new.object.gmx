<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controller_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_menu_controller_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inherit

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Entries

id.entries[0] = instance_create(id.x_center, id.y, obj_menu_entry);
id.entries[0].text = "Music Volume";
id.entries[0].value = id.entries[0].default_value;

id.entries[1] = instance_create(id.x_center, id.y, obj_menu_entry);
id.entries[1].text = "Effects Volume";
id.entries[1].value = id.entries[0].default_value;

id.entries[2] = instance_create(id.x_center, id.y, obj_menu_entry);
id.entries[2].text = "Graphics";
id.entries[1].value = id.entries[0].default_value;

id.entries[3] = instance_create(id.x_center, id.y, obj_menu_entry);
id.entries[3].text = "Back";
id.entries[3].action = scr_settings_menu_back;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

id.entries_num = array_length_1d(id.entries);

id.x_unit = room_width / 20;
id.y_unit = (room_height - padding_top - padding_bottom) / id.entries_num;

var full_slots_num = 0;

// Coordinates of all menu entries.
for (i = 0; i &lt; id.entries_num; i++) {
    // Simplified (y_unit * full_slots_num) + (y_unit / 2)
    id.entries[i].y = y_unit * (full_slots_num + 0.5);
    id.entries[i].y += padding_top;
    full_slots_num++;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selector

id.v_selector = 0;         // Controls the vertical position of the selector.
id.h_selector = 0;         // Controls the horizontal position of the selector.
id.selector_x = view_xview;
id.selector_y = view_yview;
id.selector_width = 200;
id.selector_height = 30;
id.selector_move_speed = 30 / room_speed;
id.selector_scale_speed = 30 / room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Menu

// Set alignment.
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

// Draw selector.
draw_set_alpha(0.2);
draw_roundrect_colour_ext(id.x_center - id.selector_width / 2,
                          id.entries[id.v_selector].y - 1,//id.selector_height / 2,
                          id.x_center + id.selector_width / 2,
                          id.entries[id.v_selector].y + 1,//id.selector_height / 2,
                          20,
                          20,
                          c_white,
                          c_white,
                          false);
draw_set_alpha(1);

// Draw entries.
draw_set_font(fnt_test);
for (i = 0; i &lt; id.entries_num; i++) {
    if (i == id.v_selector) {
        // Draw selected entry.
        if (id.entries[i].scale &lt; id.entries[i].max_scale) {
            id.entries[i].scale += id.entries[i].scale_speed;
            if (id.entries[i].scale_speed &gt; id.entries[i].min_scale_speed) {
                id.entries[i].scale_speed -= id.entries[i].scale_accel;
            } else {
                id.entries[i].scale_speed = id.entries[i].min_scale_speed;
            }
        }
    } else {
        // Draw unselected entry.
        if (id.entries[i].scale &gt; id.entries[i].min_scale) {
            id.entries[i].scale -= id.entries[i].scale_speed;
            if (id.entries[i].scale_speed &lt; id.entries[i].max_scale_speed) {
                id.entries[i].scale_speed += id.entries[i].scale_accel;
            } else {
                id.entries[i].scale_speed = id.entries[i].max_scale_speed;
            }
        }
    }
}

// Reset alignment.
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
